import subprocess
import json
import time

def execute_first_tool(url):
    # Use Popen to execute the first tool (cmsseek.py) non-interactively
    cmd = ['python','CMSeek/cmseek.py','-u',url]

    try:
        # Set up subprocess to handle automatic input (e.g., 'yes' for prompts)
        process = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    except UnicodeDecodeError:
        pass  # Silently ignore the exception and continue with the execution
        # Provide input to the process (in this case, just 'yes' to all prompts)
        output, error = process.communicate(input='y\n')

        # Optionally, you can print the output or error if needed
        # print(output)
        # print(error)
    


def read_cms_result(file_path):
    # Read the result from the JSON file generated by the first tool
    with open(file_path, 'r') as file:
        cms_result = json.load(file)

    # Check if "cms_id" has a value to determine if a CMS is detected
    cms_detected = bool(cms_result.get('cms_id', None))

    return cms_result, cms_detected

def print_cms_result(cms_result):
    if not cms_result:
        print("No CMS detected.")
    else:
        print("CMS detected:")
        print(f"Site: {cms_result['url']}")
        print(f"WordPress Version: {cms_result['wp_version']}")
        print("Installed Plugins:")
        plugins = cms_result['wp_plugins'].split(',')
        for plugin in plugins:
            print(f" - {plugin.strip()}")
        print("Installed Themes:")
        themes = cms_result['wp_themes'].split(',')
        for theme in themes:
            print(f" - {theme.strip()}")
        # Add more details from the JSON file if needed

def execute_second_tool(url):
    # Execute the second tool (webtech) to detect technologies
    result = subprocess.run(['python', 'script1.py', url], capture_output=True, text=True)
    webtech_output = result.stdout.strip()
    return webtech_output

def print_webtech_result(webtech_output):
    if not webtech_output:
        print("No technologies detected.")
    else:
        print("Technologies detected:")
        lines = webtech_output.split('\n')
        for line in lines:
            print(f" - {line.strip()}")
        print("Done")

if __name__ == "__main__":
    url = "https://ineos.ma"  # Replace with the desired URL
    urldir=url[8:]
    # Execute the first tool and get the results
    execute_first_tool(url)
    cms_result, cms_detected = read_cms_result(f"CMSeek/Result/{urldir}/cms.json")

    # Check if a CMS is detected or not
    if cms_detected:
        # Print the CMS results with a clear presentation
        print_cms_result(cms_result)
    else:
        # If no CMS is detected, execute the second tool (webtech)
        webtech_output = execute_second_tool(url)
        print_webtech_result(webtech_output)
